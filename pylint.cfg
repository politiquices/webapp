[MASTER]

jobs = 0
load-plugins = pylint.extensions.docparams
profile = no
persistent = no
unsafe-load-any-extension = yes
ignored-classes = googleapiclient.discovery.Resource  # Resource dynamically sets attributes and therefore fails linting

# A comma-separated list of package or module names from where C extensions may
# be loaded. Extensions are loading into the active Python interpreter and may
# run arbitrary code
generated-members = numpy.*,torch.*

init-hook = 'import sys; sys.setrecursionlimit(8 * sys.getrecursionlimit()); sys.path.extend(["/usr/src/app/python/data_api", "/usr/src/app/python/lib/jwt_auth", "/usr/src/app/python/lib/ctmodels", "/usr/src/app/python/lib/ctclients", "/usr/src/app/python/lib/nlp_support", "/usr/src/app/python/lib/ctlearn", "/usr/src/app/python/lib/plumbing", "/usr/src/app/python/lib/ctauto", "/usr/src/app/python/lib/coma", "/usr/src/app/python/lib/ctutils"])'

[REPORTS]
score = no

[MESSAGES CONTROL]

enable = all
disable = C0111,C0103,C0330,W0511,W0603,W1202,W1203,E1126,E1137,I0011,I0020,R0801,W9020

# Enable these two to see what is disabled/suppressed and needs fixing
#
# I0011 locally-disabled
# I0020 suppressed-message

# C0103 invalid-param-name (upper case constants, snake case)
# C0330  Wrong hanging indentation before block (add 4 spaces)
# W0511 fixme
# W0603 using the global statement
# W1202 % formatting in logging
# W1203 % logging-fstring-interpolation -> we allow f-string logging
# E1126 invalid-sequence-index => unreliable/mypy should handle this
# E1137 unsupported-assignment-operation => unreliable/mypy should handle this
# R0801 duplicate code ==> enable later
# W9020 useless ignored parameter type documentation (useless-type-doc) ==> clash with mypy that insists on a type

[BASIC]
accept-no-param-doc = yes
accept-no-raise-doc = yes
accept-no-return-doc = yes
accept-no-yields-doc = yes
default-docstring-type = numpy
